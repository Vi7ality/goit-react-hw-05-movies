{"version":3,"file":"static/js/278.8b25afaf.chunk.js","mappings":"8NAKMA,GAAYC,EAAAA,EAAAA,OAAK,kBAAI,6BAAJ,IA6CvB,UA3Ce,WACb,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,SAE/BC,GAAWC,EAAAA,EAAAA,MAuBjB,OATAC,EAAAA,EAAAA,YAAU,WACHJ,IACLK,EAAAA,EAAAA,IAAaL,GAAaM,MAAK,SAAAC,GAC7BX,EAAaW,EAASC,KAAKC,QAC5B,GACF,GAAC,CAACT,KAKD,6BACE,kBAAMU,OAAO,GAAGC,SAvBC,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cACfhB,EAAgB,CAAEiB,MAAOF,EAAKG,SAASD,MAAME,SAC7Cb,EAAAA,EAAAA,IAAaL,GAAaM,MAAK,SAAAC,GAC7BX,EAAaW,EAASC,KAAKC,QAC5B,IAEDK,EAAKK,OACN,EAaG,WACE,4BACE,kBAAOC,KAAK,QAAQC,KAAK,YAE3B,mBAAQA,KAAK,SAAb,wBAEF,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC/B,EAAD,CAAWU,SAAUA,EAAUP,UAAWA,QAIjD,C,kMC9CD6B,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMpB,EAAY,mCAAG,WAAMW,GAAN,iFACbQ,EAAAA,EAAAA,IAAA,6BACWR,EADX,+CADa,mFAAH,sDAMZU,EAAe,mCAAG,WAAMC,GAAN,iFAChBH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,oBADgB,mFAAH,sDAIfC,EAAiB,mCAAG,8FAClBJ,EAAAA,EAAAA,IAAA,6BADkB,mFAAH,qDAIjBK,EAAe,mCAAG,WAAMF,GAAN,iFAChBH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,4BADgB,mFAAH,sDAIfG,EAAe,mCAAG,WAAMH,GAAN,iFAChBH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,4BADgB,mFAAH,qD","sources":["pages/Movies/Movies.jsx","services/axiosService.js"],"sourcesContent":["import { LoaderSpinner } from 'components/Loader';\nimport { lazy, Suspense, useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'services/axiosService';\n\nconst MovieList = lazy(()=>import(\"./MovieList\"))\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query')\n\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    searchMovies(searchQuery).then(response => {\n      setMovieList(response.data.results);\n    });\n\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    searchMovies(searchQuery).then(response => {\n      setMovieList(response.data.results);\n    });\n  },[searchQuery])\n\n\n\n  return (\n    <main>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <label>\n          <input name=\"query\" type=\"text\" />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      <Suspense fallback={<LoaderSpinner/>}>\n        <MovieList location={location} movieList={movieList}></MovieList>\n    </Suspense>\n    </main>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'a9f79ec1d262c07be8cb295866d72ad6',\n};\n\nexport const searchMovies = async query => {\n  return await axios.get(\n    `search/movie?query=${query}&language=en-US&page=1&include_adult=false`\n  );\n};\n\nexport const getMovieDetails = async movieId => {\n  return await axios.get(`movie/${movieId}?language=en-US`);\n};\n\nexport const getTrandingMovies = async () => {\n  return await axios.get(`trending/movie/day?page=1`);\n};\n\nexport const getMovieCredits = async movieId => {\n  return await axios.get(`movie/${movieId}/credits?language=en-US`);\n};\n\nexport const getMovieReviews = async movieId => {\n  return await axios.get(`movie/${movieId}/reviews?language=en-US`);\n};\n"],"names":["MovieList","lazy","useState","movieList","setMovieList","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","searchMovies","then","response","data","results","action","onSubmit","e","preventDefault","form","currentTarget","query","elements","value","reset","name","type","Suspense","fallback","axios","api_key","getMovieDetails","movieId","getTrandingMovies","getMovieCredits","getMovieReviews"],"sourceRoot":""}