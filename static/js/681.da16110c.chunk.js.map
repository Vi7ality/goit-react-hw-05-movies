{"version":3,"file":"static/js/681.da16110c.chunk.js","mappings":"oNAuDA,UAlDgB,WACd,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACRL,EAAU,YACVM,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GAEAA,EAASC,KAAKC,QAAQC,OAAS,GACjCb,EAAgBU,EAASC,KAAKC,SAChCV,EAAU,aAERA,EAAU,YAGb,IACAY,OAAM,SAAAX,GACLC,EAASD,EAAMY,SACfb,EAAU,WACX,GACJ,GAAE,CAACG,KAEF,2BACc,YAAXJ,IAAwB,SAAC,IAAD,IACb,aAAXA,IACC,wBACGF,EAAaiB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASb,EAAS,EAATA,GACpC,OACE,2BACE,uBAAIY,IADN,KACkB,uBAAIC,MADbb,EAIZ,MAIO,cAAXJ,IAAgC,mEAErB,aAAXA,IACC,yBAAIE,EAAJ,uDAMP,C,kMCnDDgB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAY,mCAAG,WAAMC,GAAN,iFACbH,EAAAA,EAAAA,IAAA,6BACWG,EADX,+CADa,mFAAH,sDAMZC,EAAe,mCAAG,WAAMC,GAAN,iFAChBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBADgB,mFAAH,sDAIfC,EAAiB,mCAAG,8FAClBN,EAAAA,EAAAA,IAAA,6BADkB,mFAAH,qDAIjBO,EAAe,mCAAG,WAAMF,GAAN,iFAChBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BADgB,mFAAH,sDAIfhB,EAAe,mCAAG,WAAMgB,GAAN,iFAChBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BADgB,mFAAH,qD","sources":["components/Reviews.jsx","services/axiosService.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/axiosService';\nimport { LoaderSpinner } from './Loader';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState('');\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState('');\n  const { id } = useParams();\n\n  useEffect(() => {\n    setStatus('pending');\n    getMovieReviews(id)\n      .then(response => {\n\n        if (response.data.results.length > 0) {\n          setMovieReviews(response.data.results);\n        setStatus('approved');\n        } else {\n          setStatus('noReviews')\n        }\n        \n      } )\n      .catch(error => {\n        setError(error.message);\n        setStatus('rejected');\n      });\n  }, [id]);\n  return (\n    <div>\n      {status === 'pending' && <LoaderSpinner/>}\n      {status === 'approved' && (\n        <ul>\n          {movieReviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <p>{author}</p> <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n\n      {status === 'noReviews' &&       <p>We don't have any review for this movie</p>}\n\n      {status === 'rejected' && (\n        <p>{error}Oops, something went wrong. Try to reload page.</p>\n      )}\n\n\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'a9f79ec1d262c07be8cb295866d72ad6',\n};\n\nexport const searchMovies = async query => {\n  return await axios.get(\n    `search/movie?query=${query}&language=en-US&page=1&include_adult=false`\n  );\n};\n\nexport const getMovieDetails = async movieId => {\n  return await axios.get(`movie/${movieId}?language=en-US`);\n};\n\nexport const getTrandingMovies = async () => {\n  return await axios.get(`trending/movie/day?page=1`);\n};\n\nexport const getMovieCredits = async movieId => {\n  return await axios.get(`movie/${movieId}/credits?language=en-US`);\n};\n\nexport const getMovieReviews = async movieId => {\n  return await axios.get(`movie/${movieId}/reviews?language=en-US`);\n};\n"],"names":["useState","movieReviews","setMovieReviews","status","setStatus","error","setError","id","useParams","useEffect","getMovieReviews","then","response","data","results","length","catch","message","map","author","content","axios","api_key","searchMovies","query","getMovieDetails","movieId","getTrandingMovies","getMovieCredits"],"sourceRoot":""}