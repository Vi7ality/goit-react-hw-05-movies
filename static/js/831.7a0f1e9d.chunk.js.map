{"version":3,"file":"static/js/831.7a0f1e9d.chunk.js","mappings":"6OAEaA,EAAcC,EAAAA,EAAAA,OAAH,wH,SCCXC,EAAW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzB,OACE,UAACH,EAAD,CAAaI,KAAK,SAASD,QAASA,IAApC,WACE,SAAC,MAAD,CAAaE,KAAK,QAClB,qCAGL,E,iDCRYC,EAAqBL,EAAAA,EAAAA,IAAH,4CAGlBM,EAAmBN,EAAAA,EAAAA,IAAH,gDC0D7B,EAvDqB,WAAO,IAAD,IACzB,GAAwCO,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEvCC,EAAW,kBAAMP,EAASI,EAAf,EAajB,OAXAI,EAAAA,EAAAA,YAAU,WACNC,QAAQC,IAAIR,EAASG,MACxB,GAAC,CAACH,KAGHM,EAAAA,EAAAA,YAAU,YACRG,EAAAA,EAAAA,IAAgBb,GACbc,MAAK,SAAAC,GAAQ,OAAIhB,EAAgBgB,EAASC,KAA7B,IACbC,OAAM,SAAAC,GAAK,OAAIP,QAAQO,MAAMA,EAAlB,GACf,GAAE,CAAClB,KAGF,6BACE,SAACT,EAAD,CAAUC,QAAS,kBAAIiB,CAAJ,KACnB,UAACd,EAAD,YACE,gBACEwB,IAAG,0CAAqCrB,EAAasB,aACrDC,IAAI,MAEN,UAACzB,EAAD,YACE,wBAAKE,EAAawB,SAClB,0CAAkBxB,EAAayB,iBAC/B,sCACA,uBAAIzB,EAAa0B,YACjB,mCACC1B,IACC,uBAAIA,EAAa2B,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,gBAAiBA,EAAjB,iBAIlC,oDACA,2BACE,yBACE,SAAC,EAAAC,KAAD,CAAMC,GAAG,OAAOtB,MAAO,CAAEC,KAAMF,GAA/B,qBAEF,yBACE,SAAC,EAAAsB,KAAD,CAAMC,GAAG,UAAUtB,MAAO,CAAEC,KAAMF,GAAlC,2BAGJ,SAAC,EAAAwB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,kMC3DDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAY,mCAAG,WAAMC,GAAN,iFACbH,EAAAA,EAAAA,IAAA,6BACWG,EADX,+CADa,mFAAH,sDAMZvB,EAAe,mCAAG,WAAMwB,GAAN,iFAChBJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,oBADgB,mFAAH,sDAIfC,EAAiB,mCAAG,8FAClBL,EAAAA,EAAAA,IAAA,6BADkB,mFAAH,qDAIjBM,EAAe,mCAAG,WAAMF,GAAN,iFAChBJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,4BADgB,mFAAH,sDAIfG,EAAe,mCAAG,WAAMH,GAAN,iFAChBJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,4BADgB,mFAAH,qD","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/axiosService.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const BackLinkBtn = styled.button`\n  display: flex;\n  color: black;\n  align-items: center;\n\n  &:hover {\n    color: red;\n  }\n`;\n","import { HiArrowLeft } from \"react-icons/hi\";\nimport { BackLinkBtn } from \"./BackLink.styled\";\n\nexport const BackLink = ({ onClick }) => {\n  return (\n    <BackLinkBtn type='button' onClick={onClick()}>\n      <HiArrowLeft size=\"24\" />\n      <p>Go back</p>\n    </BackLinkBtn>\n  );\n};","import styled from \"@emotion/styled\";\n\nexport const MovieFlexContainer = styled.div`\n    display: flex;\n`\nexport const MovieDescriprion = styled.div`\n    margin-left: 20px;\n`","import { BackLink } from 'components/BackLink/BackLink';\nimport { LoaderSpinner } from 'components/Loader';\nimport { Suspense, useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/axiosService';\nimport { MovieDescriprion, MovieFlexContainer } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState('');\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const onGoBack = () => navigate(backLinkHref);\n\n  useEffect(() => {\n      console.log(location.state);\n  },[location])\n\n\n  useEffect(() => {\n    getMovieDetails(id)\n      .then(response => setMovieDetails(response.data))\n      .catch(error => console.error(error));\n  }, [id]);\n\n  return (\n    <main>\n      <BackLink onClick={()=>onGoBack}></BackLink>\n      <MovieFlexContainer>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`}\n          alt=\"\"\n        ></img>\n        <MovieDescriprion>\n          <h2>{movieDetails.title}</h2>\n          <p>Vote average: {movieDetails.vote_average}</p>\n          <h3>Overview</h3>\n          <p>{movieDetails.overview}</p>\n          <h3>Genres</h3>\n          {movieDetails && (\n            <p>{movieDetails.genres.map(({ name }) => `${name} `)}</p>\n          )}\n        </MovieDescriprion>\n      </MovieFlexContainer>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: backLinkHref }}>Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: backLinkHref }}>Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<LoaderSpinner />}>\n        <Outlet></Outlet>\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: 'a9f79ec1d262c07be8cb295866d72ad6',\n};\n\nexport const searchMovies = async query => {\n  return await axios.get(\n    `search/movie?query=${query}&language=en-US&page=1&include_adult=false`\n  );\n};\n\nexport const getMovieDetails = async movieId => {\n  return await axios.get(`movie/${movieId}?language=en-US`);\n};\n\nexport const getTrandingMovies = async () => {\n  return await axios.get(`trending/movie/day?page=1`);\n};\n\nexport const getMovieCredits = async movieId => {\n  return await axios.get(`movie/${movieId}/credits?language=en-US`);\n};\n\nexport const getMovieReviews = async movieId => {\n  return await axios.get(`movie/${movieId}/reviews?language=en-US`);\n};\n"],"names":["BackLinkBtn","styled","BackLink","onClick","type","size","MovieFlexContainer","MovieDescriprion","useState","movieDetails","setMovieDetails","id","useParams","navigate","useNavigate","location","useLocation","backLinkHref","state","from","onGoBack","useEffect","console","log","getMovieDetails","then","response","data","catch","error","src","poster_path","alt","title","vote_average","overview","genres","map","name","Link","to","Suspense","fallback","Loader","axios","api_key","searchMovies","query","movieId","getTrandingMovies","getMovieCredits","getMovieReviews"],"sourceRoot":""}